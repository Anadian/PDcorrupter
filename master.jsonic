/**
*	@file PDcorrupter/master.jsonic
*	@brief 
*	@author Anadian
*	@copyright MIT License
*/
{
	"name": "PDcorrupter",
	"version": "2.5.1",
	"description": "A simple-stupid file corrupter.",
	"keywords": "public domain mit rom file data corrupter javascript js node shell open source libre free",
	"organization": "Canosw",
	"homepage": "https://citablesoftware.com/software/PDcorrupter",
	"license": "(MIT)",
	"language": "javascript",
	"author": {
		"name": "Anadian",
		"email": "willanad@yandex.com",
		"url": "https://canosw.com",
		"github": "https://github.com/Anadian"
	},
	"contributors": [
		{}
	],
	"main": "source/pdcorrupter.js",
	"meta": {
		"readme": "README.md",
		"notice": "NOTICE",
		"makefile": "Makefile",
		"changes": "CHANGES",
		"gitignore": ".gitignore",
		"bin": [],
		"man": [],
		"travis": ".travis.yml",
		"appveyor": "appveyor.yml",
		"circle": null
	},
	"files": [
		"source/pdcorrupter.js"
	],
	"scripts": {
		"expand": "make expand",
		"prepare": "make prepare",
		"configure": "make configure",
		"build": "make build",
		"install": "make install",
		"test": "make test",
		"publish": "make publish",
		"misc": [
			"runscript.sh"
		]
	},
	"repository": {
		"type": "git",
		"name": "Anadian/PDcorrupter",
		"url": "https://github.com/Anadian/PDcorrupter.git"
	},
	"node": {
		"npm": {
			"package_json": "package.json",
			"name": "pdcorrupter",
			"bugs": null,
			"config": null,
			"engines": [
				"node",
				"iojs"
			],
			"dependencies": {
				"express": "*",
				"express-session": "*",
				"handlebars": "*",
				"pouchdb": "*",
				"command-line-args": "*",
				"command-line-commands": "*",
				"command-line-usage": "*",
				"winston": "*",
				"grant": "*",
				"grant-express": "*",
				"inquirer": "*",
				"chalk": "*"
				
			},
			"devDependencies": {
				"pm2": "*",
				"pkg": "^4.2.4"
			},
			"optionalDependencies": {
				"browserify": "^14.4.0"
			},
			"bundledDependencies": []
		},
		"pkg": {
			"scripts": [],
			"assets": []
		}
	},
	"travis": {
		"travis_yml": ".travis.yml",
		"language": [
			"node_js"
		],
		"branches": {
			"only": [],
			"except": []
		},
		"matrix": {
			"os": [ //runtime
				"linux",
				"osx"
			],
			"env": [], //environment
			"osx_image": null,
			"compiler": [
				"gcc",
				"clang"
			],
			"node_js": [
				"node",
				"iojs",
				"lts/*s"
			],
			"perl": [],
			"include": {},
			"exclude": {}
		},
		"steps": {
			"before_install": [],
			"install": [],
			"before_script": [],
			"script": []
			"after_success": [],
			"after_failure": [],
			"before_deploy": [],
			"deploy": [],
			"after_deploy": [],
			"after_script": []
		}
	},
	"appveyor": {
		"appveyor_yml": "appveyor.yml",
		"image": [],
		"environment": {
			"matrix": []
		},
		"steps": {
			"init": [],
			"install": [],
			"AssemblyInfo": [],
			"hosts": [],
			"before_build": [],
			"build": [],
			"after_build": [],
			"before_test": [],
			"test": [],
			"after_test": [],
			"build_success": [],
			"before_deploy": [],
			"deploy": [],
			"after_deploy": [],
			"deployment_success": [],
			"on_success": [],
			"build_failure": [],
			"deployment_failure": [],
			"on_failure": [],
			"on_finish": []
		}
	},
	"circle": {
		"config_yml": ".circleci/config.yml",
		"version": null,
		"jobs": [
			{
				"build": {
					"machine": null,
					"docker": {
						"image": {
							"command": null,
							"environment": null
						}
					},
					"environment": null,
					"working_directory": null,
					"branches": {
						"ignore": null
					},
					"steps": {
						"checkout": null,
						"run": null,
						"artifacts": null,
						"deploy": null,
						"environment": null,
						"command": null,
						"store": null
					}
				}
			},
			{}
		]
	},
	"testcases": [
		{"buldstring": null, "runtime": null, "result": null, "user": null}
	]
}
/*MasterPackage subcommands:
h, help
v, verbose
n, noop
f, force
i, interactive
d, debug
update: package-master
validate: master.jsonic
learn: directory structure
teach: instruct on how to improve directory structure
check: checks whether master-package.json reflects currrent directory structure
generate: a file of a specific type
absorb: a file of a specific type
install: install interpreter
uninstall: uninstall interpreter
list: list (un)installed interpreter
config: list config variables and their current settings

//cross com
//usetting
//udocu*/
